name: Build Kernel - Android 12 (Manual)

on:
  workflow_dispatch:
    inputs:
      kernel_repo:
        description: "Kernel Source Repository URL"
        required: true
        default: "https://android.googlesource.com/kernel/manifest"
      kernel_branch:
        description: "Kernel Branch/Tag"
        required: true
        default: "common-android12-5.10"
      sub_level:
        description: "Kernel SUBLEVEL Version (e.g. 209)"
        required: true
        default: "209"
      os_patch_level:
        description: "OS Patch Level (e.g. 2024-05)"
        required: true
        default: "2024-05"

jobs:
  build-kernel:
    name: Build Kernel
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - uses: actions/checkout@v4
        with:
          path: KernelSU-Next
          fetch-depth: 0

      - name: Setup kernel source
        run: |
          echo "Free space:"
          df -h
          cd $GITHUB_WORKSPACE
          sudo apt-get install repo -y
          mkdir android-kernel && cd android-kernel
          
          echo "[+] Initializing repo from ${{ github.event.inputs.kernel_repo }}"
          repo init \
            --depth=1 \
            --u ${{ github.event.inputs.kernel_repo }} \
            -b ${{ github.event.inputs.kernel_branch }} \
            --repo-rev=v2.16
          
          echo "[] Verifying remote branch"
          REMOTE_BRANCH=$(git ls-remote ${{ github.event.inputs.kernel_repo }} ${{ github.event.inputs.kernel_branch }})
          DEFAULT_MANIFEST_PATH=.repo/manifests/default.xml
          if grep -q deprecated <<< $REMOTE_BRANCH; then
            echo "Found deprecated branch: ${{ github.event.inputs.kernel_branch }}"
            sed -i "s|${{ github.event.inputs.kernel_branch }}|deprecated/${{ github.event.inputs.kernel_branch }}|g" $DEFAULT_MANIFEST_PATH
          fi
          
          repo --version
          repo --trace sync -c -j$(nproc --all) --no-tags
          df -h

      - name: Setup KernelSU-Next
        run: |
          cd $GITHUB_WORKSPACE/android-kernel
          echo "[+] Linking KernelSU-Next to kernel source"
          mkdir -p common/drivers
          ln -sf $GITHUB_WORKSPACE/KernelSU-Next/kernel common/drivers/kernelsu
          
          echo "[+] Modifying kernel build configuration"
          sed -i '/endmenu/i\\source "drivers/kernelsu/Kconfig"' common/drivers/Kconfig
          echo "obj-\$(CONFIG_KSU) += kernelsu/" >> common/drivers/Makefile

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: kernel-cache-${{ github.event.inputs.sub_level }}-${{ github.run_id }}
          max-size: 2G

      - name: Build Kernel
        working-directory: android-kernel
        run: |
          # 动态生成版本信息
          VERSION_NAME="android12-5.10.${{ github.event.inputs.sub_level }}"
          BUILD_TAG="custom-${{ github.event.inputs.os_patch_level }}"
          
          # 修改版本信息文件
          echo "$VERSION_NAME" > common/android/abi_gki_aarch64
          echo "BUILD_ID=$BUILD_TAG" >> common/build.config

          # 开始构建
          if [ -e build/build.sh ]; then
            LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh
          else
            tools/bazel run --config=fast //common:kernel_aarch64_dist
          fi

      - name: Package Artifacts
        run: |
          mkdir -p artifacts
          cp android-kernel/dist/Image artifacts/
          cp android-kernel/dist/Image.lz4 artifacts/
          echo "Build date: $(date)" > artifacts/build-info.txt
          echo "Kernel repo: ${{ github.event.inputs.kernel_repo }}" >> artifacts/build-info.txt
          echo "Kernel branch: ${{ github.event.inputs.kernel_branch }}" >> artifacts/build-info.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build-${{ github.event.inputs.sub_level }}
          path: |
            artifacts/*
            !*.zip

  create-flashable-zip:
    needs: build-kernel
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: kernel-build-${{ github.event.inputs.sub_level }}

      - name: Prepare Flashable Zip
        run: |
          mkdir -p anykernel3
          cp Image anykernel3/
          cp Image.lz4 anykernel3/
          
          cat << EOF > anykernel3/anykernel.sh
          #!/system/bin/sh
          echo "Flashing custom kernel build"
          echo "Build info:"
          cat build-info.txt
          EOF
          
          zip -r kernel-flashable.zip anykernel3/

      - name: Upload Flashable Zip
        uses: actions/upload-artifact@v4
        with:
          name: kernel-flashable-${{ github.event.inputs.sub_level }}
          path: kernel-flashable.zip
